name: Full build
on: 
  workflow_dispatch:
    inputs:
      version:
        description: 'Addon version'
        required: true
        default: "6.0"

run-name: Building addon/test_room - ${{ inputs.version }}

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Installing dependencies
        run: pacman -Syu --noconfirm git bash yasm python python-pip scons gcc diffutils make wget unzip tar ffmpeg aarch64-linux-gnu-binutils aarch64-linux-gnu-gcc
      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Compiling FFmpeg x86
        run: python -c 'import sys; sys.path.append("."); import build; build.compile_ffmpeg_linux("x86_64")'
      - name: Compiling FFmpeg arm
        run: python -c 'import sys; sys.path.append("."); import build; build.compile_ffmpeg_linux("arm64")'

      - name: Build Linux debug x86_64
        run: scons -j4 target=template_debug platform=linux arch=x86_64
      - name: Build Linux release x86_64
        run: scons -j4 target=template_release platform=linux arch=x86_64

      - name: Build Linux debug arm64
        run: scons -j4 target=template_debug platform=linux arch=arm64
      - name: Build Linux release arm64
        run: scons -j4 target=template_release platform=linux arch=arm64

      - name: Uploading binaries
        uses: actions/upload-artifact@v4
        with:
          name: gde_gozen_linux_bin_v${{ inputs.version }}
          path: test_room/addons/gde_gozen/bin/
          retention-days: 7

  build-windows:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Installing dependencies
        run: pacman -Syu --noconfirm git bash yasm python python-pip scons gcc diffutils make wget unzip tar mingw-w64 ffmpeg aarch64-linux-gnu-binutils aarch64-linux-gnu-gcc
      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Compiling FFmpeg x86
        run: python -c 'import sys; sys.path.append("."); import build; build.compile_ffmpeg_windows("x86_64")'

      - name: Build Windows debug x86_64
        run: scons -j4 target=template_debug platform=windows arch=x86_64
      - name: Build Windows release x86_64
        run: scons -j4 target=template_release platform=windows arch=x86_64

      - name: Uploading binaries
        uses: actions/upload-artifact@v4
        with:
          name: gde_gozen_windows_bin_v${{ inputs.version }}
          path: test_room/addons/gde_gozen/bin/
          retention-days: 7

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Installing dependencies
        run: |
          brew update
          brew install yasm scons diffutils make unzip ffmpeg
      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Compiling FFmpeg arm64
        run: python -c 'import sys; sys.path.append("."); import build; build.compile_ffmpeg_macos("arm64")'
      - name: Compiling FFmpeg x86_64
        run: python -c 'import sys; sys.path.append("."); import build; build.compile_ffmpeg_macos("x86_64")'

      - name: Build MacOS debug arm64
        run: scons -j4 target=template_debug platform=macos arch=arm64
      - name: Build MacOS release arm64
        run: scons -j4 target=template_release platform=macos arch=arm64

      - name: Build MacOS debug x86_64
        run: scons -j4 target=template_debug platform=macos arch=x86_64
      - name: Build MacOS release x86_64
        run: scons -j4 target=template_release platform=macos arch=x86_64

      - name: Correct MacOS Binary paths
        run: python -c 'import sys; sys.path.append("."); import build; build.macos_fix("arm64"); build.macos_fix("x86_64")'

      - name: Uploading binaries
        uses: actions/upload-artifact@v4
        with:
          name: gde_gozen_macos_bin_v${{ inputs.version }}
          path: test_room/addons/gde_gozen/bin/
          retention-days: 7

  build-addon:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Installing dependencies
        run: pacman -Syu --noconfirm git bash yasm python python-pip scons gcc diffutils make wget unzip tar ffmpeg

      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Prepare linux artifacts
        uses: actions/download-artifact@v4
        with:
          path: test_room/addons/gde_gozen/bin/
          name: gde_gozen_linux_bin_v${{ inputs.version }}

      - name: Prepare windows artifacts
        uses: actions/download-artifact@v4
        with:
          path: test_room/addons/gde_gozen/bin/
          name: gde_gozen_windows_bin_v${{ inputs.version }}
          
      - name: Prepare macos artifacts
        uses: actions/download-artifact@v4
        with:
          path: test_room/addons/gde_gozen/bin/
          name: gde_gozen_macos_bin_v${{ inputs.version }}

      - name: Copying license
        run: cp LICENSE test_room/addons/gde_gozen/

      - name: Updating version number
        run: sed -i 's/^version="[^"]*"/version="${{ inputs.version }}"/' test_room/addons/gde_gozen/plugin.cfg

      - name: Upload addon
        uses: actions/upload-artifact@v4
        with:
          name: gde_gozen_v${{ inputs.version }}
          path: test_room/addons/
          retention-days: 7

      - name: Upload test_room
        uses: actions/upload-artifact@v4
        with:
          name: gde_gozen_test_room_v${{ inputs.version }}
          path: test_room/
          retention-days: 7

