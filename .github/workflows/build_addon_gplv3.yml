name: build_gde_gozen_gplv3
run-name: Building addon/test_room with GPLv3
on: 
  workflow_dispatch:
    inputs:
      version:
        description: 'Addon version'
        required: false
        default: "4.0"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Restore cached linux_debug gpl
        id: cache-linux-debug-gpl-restore
        uses: actions/cache/restore@v4
        with:
          path: .scons-cache/
          key: linux_debug_gpl

      - name: Installing dependencies
        run: pacman -Syu --noconfirm git bash yasm python python-pip scons gcc diffutils make wget unzip tar ffmpeg
      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build Linux debug gpl
        run: scons -j4 target=template_debug platform=linux arch=x86_64 use_system=yes dev_build=yes enable_gpl=yes

      - name: Save cache linux_debug_gpl
        id: cache-linux-debug-gpl-save
        uses: actions/cache/save@v4
        with:
          path: .scons-cache/
          key: ${{ steps.cache-linux-debug-gpl-restore.outputs.cache-primary-key }}

      - name: Restore cached linux_release_gpl
        id: cache-linux-release-gpl-restore
        uses: actions/cache/restore@v4
        with:
          path: .scons-cache/
          key: linux_release_gpl_addon

      - name: Build Linux release gpl
        run: scons -j4 target=template_release platform=linux arch=x86_64 use_system=yes enable_gpl=yes

      - name: Save cache linux_release_gpl
        id: cache-linux-release-gpl-save
        uses: actions/cache/save@v4
        with:
          path: .scons-cache/
          key: ${{ steps.cache-linux-release-gpl-restore.outputs.cache-primary-key }}

      - name: Uploading binaries
        uses: actions/upload-artifact@v4
        with:
          name: gde_gozen_linux_bin_v${{ inputs.version }}_gplv3
          path: bin/
          retention-days: 1

  build-linux-full:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Restore cached linux_full_debug_gpl
        id: cache-linux-full-debug-gpl-restore
        uses: actions/cache/restore@v4
        with:
          path: .scons-cache/
          key: linux_full_debug_gpl_addon

      - name: Installing dependencies
        run: pacman -Syu --noconfirm git bash yasm python python-pip scons gcc diffutils make wget unzip tar ffmpeg aom nvidia-utils opus pulseaudio opencl-headers opencl-clhpp libtheora libvpx libvpl libass dav1d libdrm lame libvorbis rav1e svt-av1 x264 x265 libxml2 xvidcore libsoxr vulkan-headers vulkan-validation-layers libopenmpt
      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build Linux full debug gpl
        run: scons -j4 target=template_debug platform=linux arch=x86_64 use_system=no dev_build=yes enable_gpl=yes

      - name: Save cache linux_full_debug_gpl
        id: cache-linux-full-debug-gpl-save
        uses: actions/cache/save@v4
        with:
          path: .scons-cache/
          key: ${{ steps.cache-linux-full-debug-gpl-restore.outputs.cache-primary-key }}

      - name: Restore cached linux_full_release_gpl
        id: cache-linux-full-release-gpl-restore
        uses: actions/cache/restore@v4
        with:
          path: .scons-cache/
          key: linux_full_release_gpl_addon

      - name: Build Linux full release gpl
        run: scons -j4 target=template_release platform=linux arch=x86_64 use_system=no recompile_ffmpeg=no enable_gpl=yes

      - name: Save cache linux_full_release_gpl
        id: cache-linux-full-release-gpl-save
        uses: actions/cache/save@v4
        with:
          path: .scons-cache/
          key: ${{ steps.cache-linux-full-release-gpl-restore.outputs.cache-primary-key }}

      - name: Uploading binaries
        uses: actions/upload-artifact@v4
        with:
          name: gde_gozen_linux_full_bin_v${{ inputs.version }}_gplv3
          path: bin/
          retention-days: 1

  build-windows:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Restore cached windows_debug_gpl
        id: cache-windows-debug-gpl-restore
        uses: actions/cache/restore@v4
        with:
          path: .scons-cache/
          key: windows_debug_gpl_addon

      - name: Installing dependencies
        run: pacman -Syu --noconfirm git bash yasm python python-pip scons gcc diffutils make wget unzip tar mingw-w64 ffmpeg aom nvidia-utils opus pulseaudio opencl-headers opencl-clhpp libtheora libvpx libvpl libass dav1d libdrm lame libvorbis rav1e svt-av1 x264 x265 libxml2 xvidcore libsoxr vulkan-headers vulkan-validation-layers libopenmpt
      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build Windows debug gpl
        run: scons -j4 target=template_debug platform=windows arch=x86_64 dev_build=yes recompile_ffmpeg=yes enable_gpl=yes

      - name: Save cache windows_debug_gpl
        id: cache-windows-debug-gpl-save
        uses: actions/cache/save@v4
        with:
          path: .scons-cache/
          key: ${{ steps.cache-windows-debug-gpl-restore.outputs.cache-primary-key }}

      - name: Restore cached windows_release_gpl
        id: cache-windows-release-gpl-restore
        uses: actions/cache/restore@v4
        with:
          path: .scons-cache/
          key: windows_release_gpl_addon

      - name: Build Windows release gpl
        run: scons -j4 target=template_release platform=windows arch=x86_64 recompile_ffmpeg=no enable_gpl=yes

      - name: Save cache windows_release_gpl
        id: cache-windows-release-gpl-save
        uses: actions/cache/save@v4
        with:
          path: .scons-cache/
          key: ${{ steps.cache-windows-release-gpl-restore.outputs.cache-primary-key }}

      - name: Uploading binaries
        uses: actions/upload-artifact@v4
        with:
          name: gde_gozen_windows_bin_v${{ inputs.version }}_gplv3
          path: bin/
          retention-days: 1

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Restore cached macos_debug_gpl
        id: cache-macos-debug-gpl-restore
        uses: actions/cache/restore@v4
        with:
          path: .scons-cache/
          key: macos_debug_gpl

      - name: Installing dependencies
        run: |
          brew update
          brew install yasm scons diffutils make unzip ffmpeg
      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build MacOS debug
        run: scons -j4 target=template_debug platform=macos arch=arm64 dev_build=yes recompile_ffmpeg=yes enable_gpl=yes

      - name: Save cache macos_debug_gpl
        id: cache-macos-debug-gpl-save
        uses: actions/cache/save@v4
        with:
          path: .scons-cache/
          key: ${{ steps.cache-macos-debug-gpl-restore.outputs.cache-primary-key }}

      - name: Restore cached macos_release_gpl
        id: cache-macos-release-gpl-restore
        uses: actions/cache/restore@v4
        with:
          path: .scons-cache/
          key: macos_release_gpl

      - name: Build MacOS release gpl
        run: scons -j4 target=template_release platform=macos arch=arm64 recompile_ffmpeg=no enable_gpl=yes

      - name: Save cache macos_release_gpl
        id: cache-macos-release-gpl-save
        uses: actions/cache/save@v4
        with:
          path: .scons-cache/
          key: ${{ steps.cache-macos-release-gpl-restore.outputs.cache-primary-key }}

      - name: Correct MacOS Binary paths
        run: |
          python macos_rpath_fix.py
          otool -L bin/macos/debug/libgozen.macos.template_debug.dev.arm64.dylib
          otool -L bin/macos/release/libgozen.macos.template_release.arm64.dylib

      - name: Uploading binaries
        uses: actions/upload-artifact@v4
        with:
          name: gde_gozen_macos_bin_v${{ inputs.version }}_gplv3
          path: bin/
          retention-days: 1

  build-addon:
    needs: [build-linux, build-linux-full, build-windows, build-macos]
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Installing dependencies
        run: pacman -Syu --noconfirm git bash yasm python python-pip scons gcc diffutils make wget unzip tar ffmpeg

      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Prepare linux artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin/
          name: gde_gozen_linux_bin_v${{ inputs.version }}_gplv3

      - name: Prepare linux-full artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin/
          name: gde_gozen_linux_full_bin_v${{ inputs.version }}_gplv3

      - name: Prepare windows artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin/
          name: gde_gozen_windows_bin_v${{ inputs.version }}_gplv3
          
      - name: Prepare macos artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin/
          name: gde_gozen_macos_bin_v${{ inputs.version }}_gplv3

      - name: Copying binaries + license
        run: |
          cp -r bin test_room/addons/gde_gozen/
          cp LICENSE test_room/addons/gde_gozen/

      - name: Updating version number
        run: sed -i 's/^version="[^"]*"/version="${{ inputs.version }}"/' test_room/addons/gde_gozen/plugin.cfg

      - name: Upload addon
        uses: actions/upload-artifact@v4
        with:
          name: gde_gozen_v${{ inputs.version }}_gplv3
          path: test_room/addons/
          retention-days: 1

      - name: Upload test_room
        uses: actions/upload-artifact@v4
        with:
          name: gde_gozen_test_room_v${{ inputs.version }}_gplv3
          path: test_room/
          retention-days: 1
