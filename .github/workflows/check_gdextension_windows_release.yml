name: Check Windows build
run-name: Check build for Windows
on: 
  workflow_dispatch:
    inputs:
      artifact:
        description: 'Get artifacts'
        required: true
        default: false
        type: boolean
        
jobs:
  windows-build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Installing dependencies
        run: pacman -Syu --noconfirm ffmpeg git bash yasm python python-pip scons gcc diffutils make mingw-w64 tree

      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Restore cached windows_debug
        id: cache-windows-debug-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            godot_cpp
            ffmpeg
          key: windows_debug
      - name: Build Windows debug
        run: scons -j4 target=template_debug platform=windows arch=x86_64 dev_build=yes recompile_ffmpeg=yes
      - name: Save cache windows_debug
        id: cache-windows-debug-save
        uses: actions/cache/save@v4
        with:
          path: |
            godot_cpp
            ffmpeg
          key: ${{ steps.cache-windows-debug-restore.outputs.cache-primary-key }}

      - name: Restore cached windows_release
        id: cache-windows-release
        uses: actions/cache/restore@v4
        with:
          path: |
            godot_cpp
            ffmpeg
          key: windows_release
      - name: Build Windows release
        run: scons -j4 target=template_release platform=windows arch=x86_64 recompile_ffmpeg=no
      - name: Save cache windows_release
        id: cache-windows-release-save
        uses: actions/cache/save@v4
        with:
          path: |
            godot_cpp
            ffmpeg
          key: ${{ steps.cache-windows-release-restore.outputs.cache-primary-key }}

      - name: Uploading GDExtension artifact release
        if: ${{ github.event.inputs.artifact == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: gde_gozen_windows_build
          path: bin/windows/
